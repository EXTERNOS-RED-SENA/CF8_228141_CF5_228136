{"remainingRequest":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/src/pages/Tema3.vue?vue&type=template&id=d1a494e2","dependencies":[{"path":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/src/pages/Tema3.vue","mtime":1734957874025},{"path":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF8_228141_CF5_228136/CF8_228141_CF5_228136/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}